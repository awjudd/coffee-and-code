workflow:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^[0-9]+[.][0-9]+[.][0-9]+$/'
      variables:
        VERSION: '${CI_COMMIT_TAG}.0'
    - if: $CI_COMMIT_BRANCH
      variables:
        VERSION: '0.0.0.$CI_PIPELINE_IID'

stages:
  - build
  - test
  - publish
  - deploy

cache:
  paths:
    - build/
    - apt-cache/
    - vendor/
    - node_modules/
  key: apt-cache

publish-tag:
  image:
    name: amazon/aws-cli:2.4.28
    entrypoint: ['']
  services:
    - docker:20.10.13-dind
  stage: publish
  cache:
    - key: '$CI_COMMIT_SHA-cleanup'
      paths:
        - ./
      policy: pull
  before_script:
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t ${CI_REGISTRY_IMAGE}:latest --build-arg PROJECT_NAME=$CI_PROJECT_NAME .
    - docker build -t ${CI_REGISTRY_IMAGE}:$VERSION --build-arg PROJECT_NAME=$CI_PROJECT_NAME .
    - echo $CI_REGISTRY
    - docker push ${CI_REGISTRY_IMAGE}:latest
    - docker push ${CI_REGISTRY_IMAGE}:$VERSION
  rules:
    - if: '$CI_COMMIT_TAG =~ /^[0-9]+[.][0-9]+[.][0-9]+$/'
      when: on_success

publish-commit:
  image:
    name: amazon/aws-cli:2.4.28
    entrypoint: ['']
  services:
    - docker:20.10.13-dind
  stage: publish
  cache:
    - key: '$CI_COMMIT_SHA-cleanup'
      paths:
        - ./
      policy: pull
  before_script:
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t ${CI_REGISTRY_IMAGE}:latest --build-arg PROJECT_NAME=$CI_PROJECT_NAME .
    - docker build -t ${CI_REGISTRY_IMAGE}:$VERSION --build-arg PROJECT_NAME=$CI_PROJECT_NAME .
    - docker push ${CI_REGISTRY_IMAGE}:$VERSION
  rules:
    - if: $CI_COMMIT_TAG == null
      when: on_success
